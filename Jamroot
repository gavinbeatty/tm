import testing ;

lib tm
    : # sources
    [ glob src/tm/*.c ]
    #/tm/plat//headers XXX fixme
    #/tm/decl//headers XXX fixme
    : # requirements
    <include>src
    : # default-build
    <link>static
    : # usage-requirements
    <include>src
;

exe test_monotonic
    : # sources
    tests/test_monotonic.c
    tm/<link>static
    : # requirements
    <include>tests
    : # default-build
    <link>static
    : # usage-requirements
    <include>tests
;
run test_monotonic
    : # args
    : # input-files
    : # requirements
    : # target-name
    run_test_monotonic
    : # default-build
;


stage stage
    : # sources
    tm
    : # requirements
    : # default-build
    <link>static
    : # usage-requirements
;
explicit stage ;

PREFIX = [ modules.peek : PREFIX ] ;
EXEC_PREFIX = [ modules.peek : EXEC_PREFIX ] ;
DESTROOT = [ modules.peek : DESTROOT ] ;
path-constant destroot : $(DESTROOT:E=/) ;
path-constant prefix : $(PREFIX:E=/usr) ;
path-constant exec_prefix : $(EXEC_PREFIX:E=$(prefix)) ;

install install-lib
    : # sources
    tm
    : # requirements
    <location>$(destroot)$(exec_prefix)/lib/
    <address-model>64:<location>$(destroot)$(exec_prefix)/lib64/
    : # default-build
;

install install-pkgconfig : .//tm.pc : <location>$(destroot)$(prefix)/lib/pkgconfig ;
alias install : install-lib install-pkgconfig ;
explicit install install-lib install-pkgconfig ;
