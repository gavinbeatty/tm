
cmake_minimum_required(VERSION 2.6)
if(POLICY CMP0011)
    cmake_policy(PUSH)
    cmake_policy(SET CMP0011 NEW)
endif(POLICY CMP0011)

macro(macro_system_or_local_dep _lib _shared_static _deprelpath _build)
    string(TOUPPER "${_lib}" _upper)
    string(TOLOWER "${_lib}" _lower)
    string(TOUPPER "${_shared_static}" _libtype)
    string(TOUPPER "${_build}" _b)
    string(TOUPPER "${PROJECT_NAME}" _P)
    if(${_P}_USE_SYSTEM_${_upper})
        message(STATUS "find_package(${_lower} ${ARGN} REQUIRED)")
        find_package(${_lower} ${ARGN} REQUIRED)
    else(${_P}_USE_SYSTEM_${_upper})
        if("${_b}" STREQUAL "BUILD")
            message(STATUS "add_subdirectory(${_deprelpath} ${CMAKE_CURRENT_BINARY_DIR}/${_deprelpath})")
            add_subdirectory("${_deprelpath}" "${CMAKE_CURRENT_BINARY_DIR}/${_deprelpath}")
        else("${_b}" STREQUAL "BUILD")
            message(STATUS "Using ${_lower} built from src dir ${_deprelpath}.")
        endif("${_b}" STREQUAL "BUILD")
        include("${CMAKE_CURRENT_BINARY_DIR}/${_deprelpath}/BuildExport${_lower}.cmake")
        set(${_lower}_FOUND TRUE)
        set(${_lower}_INCLUDE_DIRS ${${_lower}_build_INCLUDE_DIRS})
        set(${_lower}_SHARED_LIBRARIES ${${_lower}_build_${_lower}_shared})
        set(${_lower}_STATIC_LIBRARIES ${${_lower}_build_${_lower}_static})
        set(${_lower}_LIBRARIES ${${_lower}_${_libtype}_LIBRARIES})
    endif(${_P}_USE_SYSTEM_${_upper})
endmacro(macro_system_or_local_dep _lib _deproot _build)

if(POLICY CMP0011)
    cmake_policy(POP)
endif(POLICY CMP0011)


