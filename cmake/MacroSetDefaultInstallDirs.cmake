
cmake_minimum_required(VERSION 2.6)
if(POLICY CMP0011)
    cmake_policy(PUSH)
    cmake_policy(SET CMP0011 NEW)
endif(POLICY CMP0011)

include(MacroOption)

#cmake doesn't have an exec_prefix, i think (check out executable_ vars)
macro(macro_set_default_install_dirs)
# exec_prefix
    set(${PROJECT_NAME}_bindir_default              "bin")
    set(${PROJECT_NAME}_sbindir_default             "sbin")
    set(${PROJECT_NAME}_libexecdir_default          "libexec")
    set(${PROJECT_NAME}_projlibexecdir_default      "${${PROJECT_NAME}_libexecdir_default}/${PROJECT_NAME}")
    set(${PROJECT_NAME}_libdir_default              "lib")
    set(${PROJECT_NAME}_projlibdir_default          "${${PROJECT_NAME}_libdir_default}/${PROJECT_NAME}")
# prefix
    set(${PROJECT_NAME}_datarootdir_default         "share")
    set(${PROJECT_NAME}_datadir_default             "${${PROJECT_NAME}_datarootdir_default}")
    set(${PROJECT_NAME}_projdatadir_default         "${${PROJECT_NAME}_datarootdir_default}/${PROJECT_NAME}")
    set(${PROJECT_NAME}_sysconfdir_default          "etc")
    set(${PROJECT_NAME}_projsysconfdir_default      "etc/${PROJECT_NAME}")
    set(${PROJECT_NAME}_sharedstatedir_default      "com")
    set(${PROJECT_NAME}_projsharedstatedir_default  "com/${PROJECT_NAME}")
    set(${PROJECT_NAME}_localstatedir_default       "var")
    set(${PROJECT_NAME}_projlocalstatedir_default   "var/${PROJECT_NAME}")
    set(${PROJECT_NAME}_includedir_default          "include")
    set(${PROJECT_NAME}_projincludedir_default      "include/${PROJECT_NAME}")
    set(${PROJECT_NAME}_docdir_default              "${${PROJECT_NAME}_datarootdir_default}/doc/${PROJECT_NAME}")
    set(${PROJECT_NAME}_infodir_default             "${${PROJECT_NAME}_datarootdir_default}/info")
    set(${PROJECT_NAME}_htmldir_default             "${${PROJECT_NAME}_docdir_default}")
    set(${PROJECT_NAME}_dvidir_default              "${${PROJECT_NAME}_docdir_default}")
    set(${PROJECT_NAME}_pdfdir_default              "${${PROJECT_NAME}_docdir_default}")
    set(${PROJECT_NAME}_psdir_default               "${${PROJECT_NAME}_docdir_default}")
    set(${PROJECT_NAME}_lispdir_default             "${${PROJECT_NAME}_datarootdir_default}/emacs/lisp-site")
    set(${PROJECT_NAME}_localedir_default           "${${PROJECT_NAME}_datarootdir_default}/locale")
    set(${PROJECT_NAME}_mandir_default              "${${PROJECT_NAME}_datarootdir_default}/man")

    set(${PROJECT_NAME}_cmakeexportdir_default      "${${PROJECT_NAME}_projlibdir_default}")
    set(${PROJECT_NAME}_cmakefindpkgdir_default     "${${PROJECT_NAME}_projdatadir_default}")

    set(${PROJECT_NAME}_pkgconfigdir_default        "${${PROJECT_NAME}_libdir_default}/pkgconfig")

    message(STATUS "-------------------------------------------------------------------")
    message(STATUS "| Before changing any of the install dirs below, clear the cache. |")
    message(STATUS "-------------------------------------------------------------------")
# exec_prefix
    macro_option(${PROJECT_NAME}_bindir             "bin dir"                       "bin")
    macro_option(${PROJECT_NAME}_sbindir            "sbin dir"                      "sbin")
    macro_option(${PROJECT_NAME}_libexecdir         "lib exec dir"                  "libexec")
    macro_option(${PROJECT_NAME}_projlibexecdir     "project's lib exec dir"        "${${PROJECT_NAME}_libexecdir}/${PROJECT_NAME}")
    macro_option(${PROJECT_NAME}_libdir             "lib dir"                       "lib")
    macro_option(${PROJECT_NAME}_projlibdir         "project's lib dir"             "${${PROJECT_NAME}_libdir}/${PROJECT_NAME}")
# prefix
    macro_option(${PROJECT_NAME}_datarootdir        "data root dir"                 "share")
    macro_option(${PROJECT_NAME}_datadir            "data dir"                      "${${PROJECT_NAME}_datarootdir}")
    macro_option(${PROJECT_NAME}_projdatadir        "project's data dir"            "${${PROJECT_NAME}_datarootdir}/${PROJECT_NAME}")
    macro_option(${PROJECT_NAME}_sysconfdir         "system conf dir"               "etc")
    macro_option(${PROJECT_NAME}_projsysconfdir     "project's system conf dir"     "etc/${PROJECT_NAME}")
    macro_option(${PROJECT_NAME}_sharedstatedir     "shared state dir"              "com")
    macro_option(${PROJECT_NAME}_projsharedstatedir "project's shared state dir"    "com/${PROJECT_NAME}")
    macro_option(${PROJECT_NAME}_localstatedir      "local state dir"               "var")
    macro_option(${PROJECT_NAME}_projlocalstatedir  "project's local state dir"     "var/${PROJECT_NAME}")
    macro_option(${PROJECT_NAME}_includedir         "include dir"                   "include")
    macro_option(${PROJECT_NAME}_projincludedir     "project's include dir"         "include/${PROJECT_NAME}")
    macro_option(${PROJECT_NAME}_docdir             "doc dir"                       "${${PROJECT_NAME}_datarootdir}/doc/${PROJECT_NAME}")
    macro_option(${PROJECT_NAME}_infodir            "info doc dir"                  "${${PROJECT_NAME}_datarootdir}/info")
    macro_option(${PROJECT_NAME}_htmldir            "html doc dir"                  "${${PROJECT_NAME}_docdir}")
    macro_option(${PROJECT_NAME}_dvidir             "dvi doc dir"                   "${${PROJECT_NAME}_docdir}")
    macro_option(${PROJECT_NAME}_pdfdir             "pdf doc dir"                   "${${PROJECT_NAME}_docdir}")
    macro_option(${PROJECT_NAME}_psdir              "ps doc dir"                    "${${PROJECT_NAME}_docdir}")
    macro_option(${PROJECT_NAME}_lispdir            "lisp package dir"              "${${PROJECT_NAME}_datarootdir}/emacs/lisp-site")
    macro_option(${PROJECT_NAME}_localedir          "locale dir"                    "${${PROJECT_NAME}_datarootdir}/locale")
    macro_option(${PROJECT_NAME}_mandir             "man doc dir"                   "${${PROJECT_NAME}_datarootdir}/man")

    macro_option(${PROJECT_NAME}_cmakeexportdir     "cmake export file dir"         "${${PROJECT_NAME}_projlibdir}")
    macro_option(${PROJECT_NAME}_cmakefindpkgdir    "cmake find_package dir"        "${${PROJECT_NAME}_projdatadir}")

    macro_option(${PROJECT_NAME}_pkgconfigdir       "pkg-config dir"                "${${PROJECT_NAME}_libdir}/pkgconfig")
endmacro(macro_set_default_install_dirs)

if(POLICY CMP0011)
    cmake_policy(POP)
endif(POLICY CMP0011)

